name: Build testing release

on:
  push:
    branches: [ dev ]
  pull_request:
    branches: [ dev ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-java@v1
      with:
        java-version: 13
    - uses: actions/cache@v2
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    - name: Run tests
      run: ./gradlew test
    - name: Upload test report (on failure)
      uses: actions/upload-artifact@v2
      if: failure()
      with:
        name: test-results-${{ runner.os }}
        path: build/reports/tests/test/**
    - name: Build release
      env:
        RELEASE_SUFFIX: -testing-${{ github.run_number }}
      run: ./gradlew runtimeZip
    - name: Upload release
      uses: actions/upload-artifact@v2
      with:
        name: OpenGotha-${{ runner.os }}-Testing-${{ github.run_number }}
        path: build/*.zip
    - name: Build .jar release
      if: ${{ runner.os == 'Linux' }}
      env:
        RELEASE_SUFFIX: -testing-${{ github.run_number }}
      run: ./gradlew distZip
    - name: Upload .jar release
      uses: actions/upload-artifact@v2
      if: ${{ runner.os == 'Linux' }}
      with:
        name: OpenGotha-Jar-Testing-${{ github.run_number }}
        path: build/distributions/*.zip

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v4.1.7
      - name: Delete previous testing release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -e
          hub release delete testing || true
          hub tag -d testing || true
          git push origin :refs/tags/testing || true
      - name: Create testing release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -x
          assets=()
          for asset in ./OpenGotha*/*.zip; do
            assets+=("-a" "$asset")
          done
          tag_name="testing"
          hub release create "${assets[@]}" -p -t dev -m "Testing release #${{ github.run_number }}" -m "This release is meant for testing purposes. Do not use in real tournaments." "$tag_name"

